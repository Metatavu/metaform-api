<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>fi.metatavu.metaform-api</groupId>
  <artifactId>metaform-api</artifactId>
  <version>2.1.0-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>Metaform API</name>
  <description>Metaform API is a central API service for Metaforms</description>
  <url>https://github.com/Metatavu/metaform-api</url>

  <licenses>
    <license>
      <name>GNU Affero General Public License v3</name>
      <url>http://www.gnu.org/licenses/agpl-3.0.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  
  <developers>
    <developer>
      <name>Metatavu Oy</name>
      <organization>Metatavu Oy</organization>
      <organizationUrl>http://www.metatavu.fi</organizationUrl>
    </developer>
  </developers>
  
  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/Metatavu/metaform-api/issues</url>
  </issueManagement>

  <scm>
    <developerConnection>scm:git:git@github.com:Metatavu/metaform-api.git</developerConnection>
    <url>git@github.com:Metatavu/metaform-api.git</url>
    <connection>scm:git:git@github.com:Metatavu/metaform-api.git</connection>
    <tag>HEAD</tag>
  </scm>

  <organization>
    <name>Metatavu Oy</name>
    <url>http://www.metatavu.fi</url>
  </organization>

  <properties>
  
    <!-- Java -->
    
    <annotation-api.version>1.3</annotation-api.version>
    
    <!-- Project -->

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
       
    <!-- Maven -->

    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    
    <!-- Wildfly -->
    
    <wildfly.version>17.0.1.Final</wildfly.version>
    
    <!-- Graal -->

    <graalvm.version>1.0.0-rc9</graalvm.version>
    
    <!-- Liquibase -->
    
    <liquibase.version>3.6.1</liquibase.version>
    
    <!-- Keycloak -->
    
    <keycloak.version>4.5.0.Final</keycloak.version>
    
    <!-- Mailgun -->
    
    <mailgun.version>1.9.2</mailgun.version>
    
    <!-- Flying Saurcer -->
    
    <flying-saucer.version>9.1.15</flying-saucer.version>
    
    <!-- Free marker -->
    
    <freemarker.version>2.3.28</freemarker.version>
    
    <!-- Slugify -->
    
    <slugify.version>2.2</slugify.version>
    
    <!-- Polyglot -->
    
    <polyglot-xhr.version>1.0.0</polyglot-xhr.version>
    
    <!-- POI -->
    
    <poi.version>4.1.2</poi.version> 
    
    <!-- Test -->
    
    <feign-version>9.4.0</feign-version>
    <feign-form-version>2.1.0</feign-form-version>
    <feign-uma.version>1.0.2</feign-uma.version>
    <openapitools.jackson-databind-nullable.version>0.2.0</openapitools.jackson-databind-nullable.version>
    <swagger-annotations.version>1.5.3</swagger-annotations.version>
    <jsr305.version>3.0.2</jsr305.version>
    <rest-assured.version>3.0.3</rest-assured.version>
    <wiremock.version>2.24.0</wiremock.version>
    <awaitility.version>3.1.2</awaitility.version>
    <pdfbox.version>2.0.8</pdfbox.version>    
    <mariadb-module.version>2.3.0</mariadb-module.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.wildfly</groupId>
        <artifactId>wildfly-spec-api</artifactId>
        <version>${wildfly.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  
  <build>
    <sourceDirectory>src/main/java</sourceDirectory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
      
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>5.0.0-beta2</version>
        <executions>
          <execution>
            <id>openapi-generate-jaxrs-spec</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/metaform-api-spec/swagger.yaml</inputSpec>
              <generatorName>jaxrs-spec</generatorName>
              <configOptions>
                <sourceFolder>src/gen/java/main</sourceFolder>
                <dateLibrary>java8</dateLibrary>
                <java8>true</java8>
                <interfaceOnly>true</interfaceOnly>
                <apiPackage>>fi.metatavu.metaform.server.rest.api</apiPackage>
                <modelPackage>fi.metatavu.metaform.server.rest.model</modelPackage>
                <returnResponse>true</returnResponse>
                <useSwaggerAnnotations>false</useSwaggerAnnotations>
              </configOptions>
            </configuration>
          </execution>
          
          <execution>
            <id>openapi-generate-client</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/metaform-api-spec/swagger.yaml</inputSpec>
              <generatorName>java</generatorName>
              <configOptions>
                <sourceFolder>src/gen/java/main</sourceFolder>
                <library>feign</library>
                <dateLibrary>java8</dateLibrary>
                <java8>true</java8>
                <apiPackage>fi.metatavu.metaform.client.api</apiPackage>
                <modelPackage>fi.metatavu.metaform.client.model</modelPackage>
                <groupId>fi.metatavu.metaform.client</groupId>
                <invokerPackage>fi.metatavu.metaform.client</invokerPackage>
                <useSwaggerAnnotations>false</useSwaggerAnnotations>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.bsc.maven</groupId>
        <artifactId>maven-processor-plugin</artifactId>
        <version>3.3.3</version>
        <executions>
          <execution>
            <id>process</id>
            <goals>
              <goal>process</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <processors>
                <processor>org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor</processor>
              </processors>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>        
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <version>5.3.5.Final</version>
          </dependency>
          <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>${annotation-api.version}</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <!-- Java EE -->
  
    <dependency>
      <groupId>org.jboss.spec.javax.servlet</groupId>
      <artifactId>jboss-servlet-api_4.0_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.jboss.spec.javax.enterprise.concurrent</groupId>
      <artifactId>jboss-concurrency-api_1.0_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.wildfly</groupId>
      <artifactId>wildfly-clustering-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-client</artifactId>
      <scope>provided</scope>
    </dependency>
    
	  <dependency>
	    <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
      <scope>provided</scope>
	  </dependency>
    
    <dependency>
      <groupId>org.jboss.spec.javax.ws.rs</groupId>
      <artifactId>jboss-jaxrs-api_2.1_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.1.1</version>
    </dependency>

    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>2.7</version>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.7</version>
    </dependency>
    
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.jboss.spec.javax.interceptor</groupId>
      <artifactId>jboss-interceptors-api_1.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.jboss.spec.javax.ejb</groupId>
      <artifactId>jboss-ejb-api_3.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-core</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <!-- POI -->
    
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>${poi.version}</version>
    </dependency>
      
    <dependency>  
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>${poi.version}</version>
    </dependency>
    
    <!-- Polyglot -->
    
    <dependency>
      <groupId>fi.metatavu.polyglot</groupId>
      <artifactId>polyglot-xhr</artifactId>
      <version>${polyglot-xhr.version}</version>
    </dependency>

    <!-- Graal -->

    <dependency>
      <groupId>org.graalvm.sdk</groupId>
      <artifactId>graal-sdk</artifactId>
      <version>${graalvm.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.graalvm.js</groupId>
      <artifactId>js</artifactId>
      <version>${graalvm.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.graalvm.js</groupId>
      <artifactId>js-scriptengine</artifactId>
      <version>${graalvm.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.graalvm.tools</groupId>
      <artifactId>profiler</artifactId>
      <version>${graalvm.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.graalvm.tools</groupId>
      <artifactId>chromeinspector</artifactId>
      <version>${graalvm.version}</version>
      <scope>runtime</scope>
    </dependency>
    
    <!-- Freemarker -->
    
    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <version>${freemarker.version}</version>
    </dependency>

    <!-- Flying saucer -->
    
    <dependency>
      <groupId>org.xhtmlrenderer</groupId>
      <artifactId>flying-saucer-pdf-itext5</artifactId>
      <version>${flying-saucer.version}</version>
    </dependency>
    
    <!-- Jackson -->

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jackson2-provider</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <!-- Slugify -->

    <dependency>
      <groupId>com.github.slugify</groupId>
      <artifactId>slugify</artifactId>
      <version>${slugify.version}</version>
    </dependency>

    <!-- Persistence -->

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate.validator</groupId>
      <artifactId>hibernate-validator</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-cdi</artifactId>
      <version>${liquibase.version}</version>
    </dependency>
    
    <!-- Keycloak -->

    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-core</artifactId>
      <version>${keycloak.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-adapter-spi</artifactId>
      <version>${keycloak.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-adapter-core</artifactId>
      <version>${keycloak.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-authz-client</artifactId>
      <version>${keycloak.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.keycloak</groupId>
          <artifactId>keycloak-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-admin-client</artifactId>
      <version>${keycloak.version}</version>
      <exclusions>      
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-core</artifactId>
        </exclusion>      
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.keycloak</groupId>
          <artifactId>keycloak-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <!-- Mailgun -->
    
    <dependency>
      <groupId>net.sargue</groupId>
      <artifactId>mailgun</artifactId>
      <version>${mailgun.version}</version>
    </dependency>
    
    <!-- Test -->

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <scope>test</scope>
      <version>${awaitility.version}</version>
    </dependency>

    <dependency>
      <groupId>fi.metatavu.feign</groupId>
      <artifactId>feign-uma</artifactId>
      <version>${feign-uma.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
        <groupId>io.github.openfeign</groupId>
        <artifactId>feign-core</artifactId>
        <version>${feign-version}</version>
    </dependency>
    
    <dependency>
        <groupId>io.github.openfeign</groupId>
        <artifactId>feign-jackson</artifactId>
        <version>${feign-version}</version>
    </dependency>
    <dependency>
        <groupId>io.github.openfeign</groupId>
        <artifactId>feign-slf4j</artifactId>
        <version>${feign-version}</version>
    </dependency>
    <dependency>
        <groupId>io.github.openfeign.form</groupId>
        <artifactId>feign-form</artifactId>
        <version>${feign-form-version}</version>
    </dependency>
    
    <dependency>
      <groupId>org.openapitools</groupId>
      <artifactId>jackson-databind-nullable</artifactId>
      <version>${openapitools.jackson-databind-nullable.version}</version>
    </dependency>
    
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-annotations</artifactId>
      <version>${swagger-annotations.version}</version>
    </dependency>
    
    <!-- Findbugs -->
    
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>${jsr305.version}</version>
    </dependency>    
    
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock</artifactId>
      <version>${wiremock.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>${rest-assured.version}</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-wildfly-adapter-dist</artifactId>
      <version>${keycloak.version}</version>
      <type>zip</type>
      <scope>test</scope>
    </dependency>
    
    <!-- Database Driver -->
  
    <dependency>
      <groupId>org.mariadb.jdbc</groupId>
      <artifactId>mariadb-java-client</artifactId>
      <version>${mariadb-module.version}</version>
      <scope>test</scope>
    </dependency>
    
    <!-- PDFBox -->

    <dependency>
      <groupId>org.apache.pdfbox</groupId>
      <artifactId>pdfbox</artifactId>
      <version>${pdfbox.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.pdfbox</groupId>
      <artifactId>pdfbox-tools</artifactId>
      <version>${pdfbox.version}</version>
      <scope>test</scope>
    </dependency>
    
  </dependencies>
  
  <profiles>
    <profile>
      <id>itests</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      
      <properties>
        <it.port.http>1234</it.port.http>
        <it.host>localhost</it.host>
        <it.jdbc.driver>org.mariadb.jdbc.MySQLDataSource</it.jdbc.driver>
        <it.jdbc.module>com.mariadb.jdbc</it.jdbc.module>        
        <it.jdbc.dbname>db</it.jdbc.dbname>
        <it.jdbc.username>sa</it.jdbc.username>
        <it.jdbc.password>sa</it.jdbc.password>
        <it.jdbc.url>jdbc:mysql://localhost:3306/${it.jdbc.dbname}?serverTimezone=Europe/Helsinki</it.jdbc.url>
        <it.jdbc.jndi>java:jboss/datasources/metaform-api</it.jdbc.jndi>
        <it.jdbc.type>javax.sql.XADataSource</it.jdbc.type>
        <it.jdbc.transactionsupport>XA_TRANSACTION</it.jdbc.transactionsupport>
        <mariadb-module.version>2.3.0</mariadb-module.version>
        <it.skipdatabasedrop>true</it.skipdatabasedrop>
        <jacoco.reportPath>${project.basedir}/target/jacoco.exec</jacoco.reportPath>
      </properties>
      
      <build>
        <plugins>

          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <images>
                <image>
                  <name>mysql:5.6</name>
                  <alias>test-mysql</alias>
                  <run>
                    <ports>
                      <port>3306:3306</port>
                    </ports>
                    <env>
                      <MYSQL_ROOT_PASSWORD>rootpass</MYSQL_ROOT_PASSWORD>
                      <MYSQL_DATABASE>db</MYSQL_DATABASE>
                      <MYSQL_USER>sa</MYSQL_USER>
                      <MYSQL_PASSWORD>sa</MYSQL_PASSWORD>
                    </env>
                    <wait>
                      <log>ready for connections.</log>
                    </wait>
                    <cmd>--lower_case_table_names=1</cmd>
                  </run>
                </image>
                <image>
                  <name>jboss/keycloak:${keycloak.version}</name>
                  <alias>test-keycloak</alias>
                  <run>
                    <env>
                      <KEYCLOAK_USER>admin</KEYCLOAK_USER>
                      <KEYCLOAK_PASSWORD>admin</KEYCLOAK_PASSWORD>
                      <KEYCLOAK_IMPORT>/opt/docker/kc.json</KEYCLOAK_IMPORT>
                    </env>
                    <volumes>
                      <bind>
                        <volume>${project.basedir}/test-volumes/keycloak:/opt/docker</volume>
                      </bind>
                    </volumes>
                    <ports>
                      <port>8080:8080</port>
                    </ports>
                    <wait>
                      <log>Resuming server</log>
                      <time>120000</time>
                    </wait>
                  </run>
                </image>
                <image>
                  <name>rodolpheche/wiremock</name>
                  <alias>test-wiremock</alias>
                  <run>
                    <ports>
                      <port>8888:8080</port>
                    </ports>
                  </run>
                </image>
                <image>
                  <name>test-api</name>
                  <build>
                    <dockerFileDir>${project.basedir}</dockerFileDir>
                    <filter>@</filter>
                  </build>
                  <run>
                    <ports>
                      <port>1234:8080</port>
                    </ports>
                    <links> 
                      <link>test-mysql:test-mysql</link>
                      <link>test-keycloak:test-keycloak</link>
                      <link>test-wiremock:test-wiremock</link>
                    </links>                    
                    <env>
                      <METAFORM_API_CLUSTER_PASSWORD>clusterpass</METAFORM_API_CLUSTER_PASSWORD>
                      <METAFORM_API_HOST>localhost</METAFORM_API_HOST>
                      <METAFORM_API_DB_HOST>test-mysql</METAFORM_API_DB_HOST>
                      <METAFORM_API_DB_PORT>3306</METAFORM_API_DB_PORT>
                      <METAFORM_API_DB_NAME>db</METAFORM_API_DB_NAME>
                      <METAFORM_API_DB_OPTS>?useSSL=false&amp;allowPublicKeyRetrieval=true</METAFORM_API_DB_OPTS>
                      <METAFORM_API_DB_USERNAME>root</METAFORM_API_DB_USERNAME>
                      <METAFORM_API_DB_PASSWORD>rootpass</METAFORM_API_DB_PASSWORD>
                      <METAFORM_TX_IDENTIFIER>tx</METAFORM_TX_IDENTIFIER>
                      <KEYCLOAK_REALM>test-1</KEYCLOAK_REALM>
                      <KEYCLOAK_RESOURCE>metaform-api</KEYCLOAK_RESOURCE>
                      <KEYCLOAK_URL>http://test-keycloak:8080/auth</KEYCLOAK_URL>
                      <KEYCLOAK_SECRET>378833f9-dde8-4443-84ca-edfa26e2f0ee</KEYCLOAK_SECRET>
                      <KEYCLOAK_ADMIN_USER>realm-admin</KEYCLOAK_ADMIN_USER>
                      <KEYCLOAK_ADMIN_PASS>test</KEYCLOAK_ADMIN_PASS>
                      <MAILGUN_API_URL>http://test-wiremock:8080/mgapi</MAILGUN_API_URL>
                      <MAILGUN_DOMAIN>domain.example.com</MAILGUN_DOMAIN>
                      <MAILGUN_API_KEY>fakekey</MAILGUN_API_KEY>
                      <MAILGUN_SENDER_EMAIL>metaform-test@example.com</MAILGUN_SENDER_EMAIL>
                      <MAILGUN_SENDER_NAME>Metaform Test</MAILGUN_SENDER_NAME>
                      <KUBERNETES_NAMESPACE>test</KUBERNETES_NAMESPACE>
                      <KUBERNETES_LABELS>test</KUBERNETES_LABELS>
                      <runmode>TEST</runmode>
                    </env>
                    <wait>
                      <log>Resuming server</log>
                      <time>240000</time>
                    </wait>
                  </run>
                </image>
              </images>
              <showLogs>true</showLogs>
            </configuration>
            <executions>
              <execution>
                <id>docker-test-api-build</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>build</goal>
                </goals>
              </execution>
              <execution>
                <id>docker-test-api-start</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>docker-test-api-stop</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>  

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>2.21.0</version>
            <configuration>
              <failIfNoTests>true</failIfNoTests>
              <skipAfterFailureCount>1</skipAfterFailureCount>
              <argLine>-Xmx2G</argLine>
              <includes>
                <include>${it.tests}</include>
              </includes>
              <systemPropertyVariables>
                <java.util.logging.config.file>${project.basedir}/src/test/resources/logging.properties</java.util.logging.config.file>
                <jboss.home>${wildfly.home}</jboss.home>
                <module.path>${wildfly.home}/modules</module.path>
                <it.host>${it.host}</it.host>
                <it.port.http>${it.port.http}</it.port.http>
                <it.jdbc.driver>${it.jdbc.driver}</it.jdbc.driver>
                <it.jdbc.url>${it.jdbc.url}</it.jdbc.url>
                <it.jdbc.jndi>${it.jdbc.jndi}</it.jdbc.jndi>
                <it.jdbc.username>${it.jdbc.username}</it.jdbc.username>
                <it.jdbc.password>${it.jdbc.password}</it.jdbc.password>
              </systemPropertyVariables>
            </configuration>
            <executions>
              <execution>
                <id>integration-test</id>
                <goals>
                  <goal>integration-test</goal>
                </goals>
              </execution>
              <execution>
                <id>verify</id>
                <goals>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
                    
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>wait-maven-plugin</artifactId>
            <version>1.0</version>
            <executions>
              <execution>
                <id>wait</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>wait</goal>
                </goals>      
                <configuration>
                  <protocol>http</protocol>
                  <host>${it.host}</host>
                  <port>${it.port.http}</port>
                  <file>/v1/system/ping</file>
                  <maxcount>20</maxcount>
                  <timeout>10000</timeout>
                </configuration>
              </execution>
            </executions>
          </plugin>
          
        </plugins>
      </build>
    </profile>  
  </profiles>
  
  <repositories>
    <repository>
      <id>repository.jboss.org-public</id>
      <name>JBoss repository</name>
      <url>https://repository.jboss.org/nexus/content/groups/public</url>
    </repository>
  </repositories>
  
</project>
