<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>fi.metatavu.metaform-api</groupId>
  <artifactId>metaform-api</artifactId>
  <version>2.0.0-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>Metaform API</name>
  <description>Metaform API is a central API service for Metaforms</description>
  <url>https://github.com/Metatavu/metaform-api</url>

  <licenses>
    <license>
      <name>GNU Affero General Public License v3</name>
      <url>http://www.gnu.org/licenses/agpl-3.0.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  
  <developers>
    <developer>
      <name>Metatavu Oy</name>
      <organization>Metatavu Oy</organization>
      <organizationUrl>http://www.metatavu.fi</organizationUrl>
    </developer>
  </developers>
  
  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/Metatavu/metaform-api/issues</url>
  </issueManagement>

  <scm>
    <developerConnection>scm:git:git@github.com:Metatavu/metaform-api.git</developerConnection>
    <url>git@github.com:Metatavu/metaform-api.git</url>
    <connection>scm:git:git@github.com:Metatavu/metaform-api.git</connection>
    <tag>HEAD</tag>
  </scm>

  <organization>
    <name>Metatavu Oy</name>
    <url>http://www.metatavu.fi</url>
  </organization>

  <properties>
  
    <!-- Project -->

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    
    <!-- Spec -->
    
    <metaform-api-spec.version>0.1.6</metaform-api-spec.version>
       
    <!-- Maven -->

    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    
    <!-- Wildfly -->
    
    <wildfly.version>17.0.1.Final</wildfly.version>
    
    <!-- Graal -->

    <graalvm.version>1.0.0-rc9</graalvm.version>
    
    <!-- Liquibase -->
    
    <liquibase.version>3.6.1</liquibase.version>
    
    <!-- Keycloak -->
    
    <keycloak.version>4.5.0.Final</keycloak.version>
    
    <!-- Mailgun -->
    
    <mailgun.version>1.8.0</mailgun.version>
    
    <!-- Flying Saurcer -->
    
    <flying-saucer.version>9.1.15</flying-saucer.version>
    
    <!-- Free marker -->
    
    <freemarker.version>2.3.28</freemarker.version>
    
    <!-- Slugify -->
    
    <slugify.version>2.2</slugify.version>
    
    <!-- Polyglot -->
    
    <polyglot-xhr.version>1.0.0</polyglot-xhr.version>
    
    <!-- Test -->
    
    <feign-uma.version>1.0.2</feign-uma.version>
    <rest-assured.version>3.0.3</rest-assured.version>
    <metaform-api-client.version>0.1.6</metaform-api-client.version>
    <wiremock.version>2.24.0</wiremock.version>
    <awaitility.version>3.1.2</awaitility.version>
    <pdfbox.version>2.0.8</pdfbox.version>    
    <mariadb-module.version>2.3.0</mariadb-module.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.wildfly</groupId>
        <artifactId>wildfly-spec-api</artifactId>
        <version>${wildfly.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  
  <build>
    <sourceDirectory>src/main/java</sourceDirectory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M1</version>
      </plugin>	    
      <plugin>
        <groupId>org.bsc.maven</groupId>
        <artifactId>maven-processor-plugin</artifactId>
        <version>3.3.3</version>
        <executions>
          <execution>
            <id>process</id>
            <goals>
              <goal>process</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <processors>
                <processor>org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor</processor>
              </processors>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>        
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <version>5.3.5.Final</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <!-- Java EE -->
  
    <dependency>
      <groupId>org.jboss.spec.javax.servlet</groupId>
      <artifactId>jboss-servlet-api_4.0_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.jboss.spec.javax.enterprise.concurrent</groupId>
      <artifactId>jboss-concurrency-api_1.0_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.wildfly</groupId>
      <artifactId>wildfly-clustering-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-client</artifactId>
      <scope>provided</scope>
    </dependency>
    
	  <dependency>
	    <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
      <scope>provided</scope>
	  </dependency>
    
    <dependency>
      <groupId>org.jboss.spec.javax.ws.rs</groupId>
      <artifactId>jboss-jaxrs-api_2.1_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>fi.metatavu.metaform</groupId>
      <artifactId>metaform-api-spec</artifactId>
      <version>${metaform-api-spec.version}</version>
    </dependency>
    
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.1.1</version>
    </dependency>

    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>2.7</version>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.7</version>
    </dependency>
    
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.jboss.spec.javax.interceptor</groupId>
      <artifactId>jboss-interceptors-api_1.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.jboss.spec.javax.ejb</groupId>
      <artifactId>jboss-ejb-api_3.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-core</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <!-- Polyglot -->
    
    <dependency>
      <groupId>fi.metatavu.polyglot</groupId>
      <artifactId>polyglot-xhr</artifactId>
      <version>${polyglot-xhr.version}</version>
    </dependency>

    <!-- Graal -->

    <dependency>
      <groupId>org.graalvm.sdk</groupId>
      <artifactId>graal-sdk</artifactId>
      <version>${graalvm.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.graalvm.js</groupId>
      <artifactId>js</artifactId>
      <version>${graalvm.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.graalvm.js</groupId>
      <artifactId>js-scriptengine</artifactId>
      <version>${graalvm.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.graalvm.tools</groupId>
      <artifactId>profiler</artifactId>
      <version>${graalvm.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.graalvm.tools</groupId>
      <artifactId>chromeinspector</artifactId>
      <version>${graalvm.version}</version>
      <scope>runtime</scope>
    </dependency>
    
    <!-- Freemarker -->
    
    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <version>${freemarker.version}</version>
    </dependency>

    <!-- Flying saucer -->
    
    <dependency>
      <groupId>org.xhtmlrenderer</groupId>
      <artifactId>flying-saucer-pdf-itext5</artifactId>
      <version>${flying-saucer.version}</version>
    </dependency>
    
    <!-- Jackson -->

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jackson2-provider</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <!-- Slugify -->

    <dependency>
      <groupId>com.github.slugify</groupId>
      <artifactId>slugify</artifactId>
      <version>${slugify.version}</version>
    </dependency>

    <!-- Persistence -->

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate.validator</groupId>
      <artifactId>hibernate-validator</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-cdi</artifactId>
      <version>${liquibase.version}</version>
    </dependency>
    
    <!-- Keycloak -->

    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-core</artifactId>
      <version>${keycloak.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-adapter-spi</artifactId>
      <version>${keycloak.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-adapter-core</artifactId>
      <version>${keycloak.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-authz-client</artifactId>
      <version>${keycloak.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.keycloak</groupId>
          <artifactId>keycloak-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-admin-client</artifactId>
      <version>${keycloak.version}</version>
      <exclusions>      
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-core</artifactId>
        </exclusion>      
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.keycloak</groupId>
          <artifactId>keycloak-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <!-- Mailgun -->
    
    <dependency>
      <groupId>net.sargue</groupId>
      <artifactId>mailgun</artifactId>
      <version>${mailgun.version}</version>
    </dependency>
    
    <!-- Test -->

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <scope>test</scope>
      <version>${awaitility.version}</version>
    </dependency>

    <dependency>
      <groupId>fi.metatavu.feign</groupId>
      <artifactId>feign-uma</artifactId>
      <version>${feign-uma.version}</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock</artifactId>
      <version>${wiremock.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>fi.metatavu.metaform</groupId>
      <artifactId>metaform-api-client</artifactId>
      <version>${metaform-api-client.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.jboss.resteasy</groupId>
          <artifactId>resteasy-client</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.jboss.resteasy</groupId>
          <artifactId>resteasy-multipart-provider</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-annotations</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.jboss.resteasy</groupId>
          <artifactId>resteasy-jackson-provider</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.github.joschi.jackson</groupId>
          <artifactId>jackson-datatype-threetenbp</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.datatype</groupId>
          <artifactId>jackson-datatype-jsr310</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>${rest-assured.version}</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-wildfly-adapter-dist</artifactId>
      <version>${keycloak.version}</version>
      <type>zip</type>
      <scope>test</scope>
    </dependency>
    
    <!-- Database Driver -->
  
    <dependency>
      <groupId>org.mariadb.jdbc</groupId>
      <artifactId>mariadb-java-client</artifactId>
      <version>${mariadb-module.version}</version>
      <scope>test</scope>
    </dependency>
    
    <!-- PDFBox -->

    <dependency>
      <groupId>org.apache.pdfbox</groupId>
      <artifactId>pdfbox</artifactId>
      <version>${pdfbox.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.pdfbox</groupId>
      <artifactId>pdfbox-tools</artifactId>
      <version>${pdfbox.version}</version>
      <scope>test</scope>
    </dependency>
    
  </dependencies>
  
  <profiles>
    <profile>
      <id>itests</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      
      <properties>
        <it.port.http>58080</it.port.http>
        <it.host>api-itest.metaform.fi</it.host>        
        <it.jdbc.driver>org.mariadb.jdbc.MySQLDataSource</it.jdbc.driver>
        <it.jdbc.module>com.mariadb.jdbc</it.jdbc.module>        
        <it.jdbc.dbname>mftest</it.jdbc.dbname>
        <it.jdbc.username>sa</it.jdbc.username>
        <it.jdbc.password>sa</it.jdbc.password>
        <it.jdbc.url>jdbc:mysql://localhost:3306/${it.jdbc.dbname}?serverTimezone=Europe/Helsinki</it.jdbc.url>
        <it.jdbc.jndi>java:jboss/datasources/metaform-api</it.jdbc.jndi>
        <it.jdbc.type>javax.sql.XADataSource</it.jdbc.type>
        <it.jdbc.transactionsupport>XA_TRANSACTION</it.jdbc.transactionsupport>
        <mariadb-module.version>2.3.0</mariadb-module.version>
        <it.skipdatabasedrop>true</it.skipdatabasedrop>
        <jacoco.reportPath>${project.basedir}/target/jacoco.exec</jacoco.reportPath>
      </properties>
      
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>2.21.0</version>
            <configuration>
              <failIfNoTests>true</failIfNoTests>
              <skipAfterFailureCount>1</skipAfterFailureCount>
              <argLine>-Xmx2G</argLine>
              <includes>
                <include>${it.tests}</include>
              </includes>
              <systemPropertyVariables>
                <java.util.logging.config.file>${project.basedir}/src/test/resources/logging.properties</java.util.logging.config.file>
                <jboss.home>${wildfly.home}</jboss.home>
                <module.path>${wildfly.home}/modules</module.path>
                <it.host>${it.host}</it.host>
                <it.port.http>${it.port.http}</it.port.http>
                <it.jdbc.driver>${it.jdbc.driver}</it.jdbc.driver>
                <it.jdbc.url>${it.jdbc.url}</it.jdbc.url>
                <it.jdbc.jndi>${it.jdbc.jndi}</it.jdbc.jndi>
                <it.jdbc.username>${it.jdbc.username}</it.jdbc.username>
                <it.jdbc.password>${it.jdbc.password}</it.jdbc.password>
              </systemPropertyVariables>
            </configuration>
            <executions>
              <execution>
                <id>integration-test</id>
                <goals>
                  <goal>integration-test</goal>
                </goals>
              </execution>
              <execution>
                <id>verify</id>
                <goals>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
         
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.1</version>
            <configuration>
              <destFile>${jacoco.reportPath}</destFile>
              <dataFile>${jacoco.reportPath}</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
              <classDumpDir>${project.reporting.outputDirectory}/jacoco-it/classes</classDumpDir>
              <excludes>
                <exclude>**/*_.class</exclude>
              </excludes>
            </configuration>
                
            <executions>
              <execution>
                <id>jacoco-agent</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <destFile>${jacoco.reportPath}</destFile>
                  <propertyName>jacoco.agent.itArgLine</propertyName>
                </configuration>
              </execution>
              <execution>
                <id>jacoco-report</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>dump</goal>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <version>1.7.6</version>
            <configuration>
              <container>
                <containerId>wildfly16x</containerId>
                <log>${project.basedir}/target/cargo.log</log>
                <output>${project.basedir}/target/wildfly.log</output>
                <zipUrlInstaller>
                  <url>https://download.jboss.org/wildfly/${wildfly.version}/wildfly-${wildfly.version}.zip</url>
                  <downloadDir>${project.basedir}/.cargo/downloads</downloadDir>
                  <extractDir>${project.basedir}/.cargo/extracts</extractDir>
                </zipUrlInstaller>         
              </container>
              <configuration>
                <properties>
                  <cargo.servlet.port>${it.port.http}</cargo.servlet.port>
                  <cargo.jboss.configuration>standalone</cargo.jboss.configuration>
                  <cargo.jvmargs>${jacoco.agent.itArgLine},output=tcpserver,port=6300 -Xmx2G -Djava.net.preferIPv4Stack=true -Djava.net.preferIPv4Addresses=true -Drunmode=TEST</cargo.jvmargs>
                </properties>    
              </configuration>
              <deployer/>
            </configuration>
            <executions>
              <execution>
                <id>start-cargo</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-cargo</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
                <configuration>
                  <skip>${it.skipserverstop}</skip>
                </configuration>
              </execution>
            </executions>
          </plugin>
          
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>3.1.1</version>
            <executions>
              <execution>
                <id>unpack-keycloak-wildfly-adapter</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>unpack-dependencies</goal>
                </goals>
                <configuration>
                  <includeGroupIds>org.keycloak</includeGroupIds>
                  <includeArtifactIds>keycloak-wildfly-adapter-dist</includeArtifactIds>
                  <outputDirectory>${project.build.directory}/../.cargo/extracts/wildfly-${wildfly.version}/wildfly-${wildfly.version}</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.8</version>
            <executions>
              <execution>
                <id>unpack-mariadb-module</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <get src="https://static.metatavu.io/wildfly/wildfly-${wildfly.version}-mariadb-module-${mariadb-module.version}.zip" dest="${project.build.directory}/mariadb-module.zip" verbose="true" usetimestamp="true"/>
                    <unzip src="${project.build.directory}/mariadb-module.zip" dest="${project.build.directory}/../.cargo/extracts/wildfly-${wildfly.version}/wildfly-${wildfly.version}"/>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.wildfly.plugins</groupId>
            <artifactId>wildfly-maven-plugin</artifactId>
            <version>2.0.1.Final</version>
            <executions>
              <execution>
                <id>wildfly-keycloak-configure</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>execute-commands</goal>
                </goals>
                <configuration>
                  <batch>false</batch>
                  <offline>true</offline>
                  <fail-on-error>false</fail-on-error>
                  <jbossHome>${project.build.directory}/../.cargo/extracts/wildfly-${wildfly.version}/wildfly-${wildfly.version}</jbossHome>
                  <scripts>
                    <script>${project.build.directory}/../.cargo/extracts/wildfly-${wildfly.version}/wildfly-${wildfly.version}/bin/adapter-elytron-install-offline.cli</script>
                  </scripts>
                </configuration>
              </execution>    
              <execution>
                <id>wildfly-configure</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>execute-commands</goal>
                </goals>
                <configuration>
                  <batch>false</batch>
                  <offline>true</offline>
                  <jbossHome>${project.build.directory}/../.cargo/extracts/wildfly-${wildfly.version}/wildfly-${wildfly.version}</jbossHome>
                  <commands>
                    <command>embed-server --server-config=standalone.xml</command>
                    
                    <!-- JDBC -->
                    
                    <command>if (outcome != success) of /subsystem=datasources/data-source=it:read-resource</command>
                    <command>/subsystem=datasources/jdbc-driver=it:add(driver-name="it", driver-module-name=${it.jdbc.module},driver-xa-datasource-class-name=${it.jdbc.driver})</command>
                    <command>data-source add --name=it --use-ccm=true --jta=true --enabled=true --driver-name=it --jndi-name=${it.jdbc.jndi} --user-name=${it.jdbc.username} --password=${it.jdbc.password} --connection-url=${it.jdbc.url}</command>
                    <command>end-if</command>
                    
                    <!-- Host -->
                                                          
                    <command>if (outcome != success) of /subsystem=undertow/server=default-server/host=metaform-api:read-resource</command>
                    <command>/subsystem=undertow/server=default-server/host=metaform-api:add(alias=["${it.host}"],default-web-module="metaform-api.war")</command>
                    <command>/system-property=it-test:add(value="true")</command>
                    <command>/system-property=metaform-api.config-path:add(value="${project.basedir}/test-config")</command>
                    <command>end-if</command>
                    
                    <!-- Infinispan -->
                    
                    <command>if (outcome != success) of /subsystem=infinispan/cache-container=metaform:read-resource</command>
                    <command>/subsystem=infinispan/cache-container=metaform:add()</command>
                    <command>/subsystem=infinispan/cache-container=metaform/local-cache=file-meta:add()</command>
                    <command>/subsystem=infinispan/cache-container=metaform/local-cache=file-data:add()</command>
                    <command>end-if</command>
                    
                    <!-- Logging -->
                    
                    <command>if (outcome != success) of /subsystem=logging/logger=org.keycloak.adapters.authorization.PolicyEnforcer:read-resource</command>
                    <command>/subsystem=logging/logger=org.keycloak.adapters.authorization.PolicyEnforcer:add(level=WARNING)</command> 
                    <command>end-if</command>
                  </commands>
                </configuration>
              </execution>

              <execution>
                <id>wildfly-stop</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>shutdown</goal>
                </goals>
              </execution>  
              
              <execution>
                <id>wildfly-start</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
                <configuration>
                  <javaOpts>-Djboss.http.port=${it.port.http} ${jacoco.agent.itArgLine},output=tcpserver,port=6300 -Xmx2G -Djava.net.preferIPv4Stack=true -Djava.net.preferIPv4Addresses=true -Drunmode=TEST</javaOpts>
                  <jbossHome>${project.build.directory}/../.cargo/extracts/wildfly-${wildfly.version}/wildfly-${wildfly.version}</jbossHome>
                </configuration>
              </execution>  

              <execution>
                <id>deploy</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>deploy</goal>
                </goals>
                <configuration>
                  <filename>${project.build.finalName}.${project.packaging}</filename>
                </configuration>
              </execution>
            </executions>
          </plugin>
                    
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>wait-maven-plugin</artifactId>
            <version>1.0</version>
            <executions>
              <execution>
                <id>wait</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>wait</goal>
                </goals>      
                <configuration>
                  <protocol>http</protocol>
                  <host>${it.host}</host>
                  <port>${it.port.http}</port>
                  <file>/v1/system/ping</file>
                  <maxcount>20</maxcount>
                  <timeout>10000</timeout>
                </configuration>
              </execution>
            </executions>
          </plugin>
          
          <plugin>
            <groupId>org.eluder.coveralls</groupId>
            <artifactId>coveralls-maven-plugin</artifactId>
            <version>4.3.0</version>
          </plugin>
        </plugins>
      </build>
    </profile>  
  </profiles>
  
  <repositories>
    <repository>
      <id>repository.jboss.org-public</id>
      <name>JBoss repository</name>
      <url>https://repository.jboss.org/nexus/content/groups/public</url>
    </repository>
  </repositories>
  
</project>
